version: 0.2
phases:
  install:
    runtime-versions:
      nodejs: 18
      golang: 1.21
    commands:
      - cd backend/nodejs
      - echo "Installing project dependencies..."
      - npm install --quiet
  pre_build:
    commands:
      - echo "Logging in to Amazon ECR..."
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com  
  build:
    commands:
    # Nodejs Build
      - echo "Starting build..."
      - npm run build
      - cp ../infrastructure/backend.yml .
      - aws cloudformation package --template-file backend.yml --s3-bucket $S3_BUCKET --output-template-file template-export.yml

    # Build and push worker
      - echo "Building worker..."
      - cd ../workers/processor
      - docker build -t processor .
      - echo "Tagging worker image..."
      - docker tag processor:latest $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$ECR_REPOSITORY:latest
      - echo "Pushing worker image..."
      - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$ECR_REPOSITORY:latest
      - cd ../../nodejs
      
  post_build:
    commands:
      - rm -rf node_modules
      - npm prune --omit=dev --quiet
      - rm -rf dist/workers/*

artifacts:
  files:
    - template-export.yml
    - dist/**/*
    - package.json
    - package-lock.json
  base-directory:  backend/nodejs